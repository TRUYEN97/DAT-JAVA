/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.qt.view.element;

import com.qt.view.interfaces.MouseClicked;
import com.qt.common.Util;
import java.awt.Color;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.MouseEvent;

/**
 *
 * @author Admin
 */
public class ButtonDesign extends javax.swing.JPanel {

    private Color onColor;
    private Color offColor;
    private boolean status;
    private MouseClicked mouseClicked;

    /**
     * Creates new form ButtonDesign
     */
    public ButtonDesign() {
        initComponents();
        setBackground(new Color(0, 0, 0, 0));
        this.setOpaque(false);
    }

    public void setMouseClicked(MouseClicked mouseClicked) {
        this.mouseClicked = mouseClicked;
    }

    public Color getOnColor() {
        return onColor;
    }

    public void setOnColor(Color onColor) {
        this.onColor = onColor;
    }

    public Color getOffColor() {
        return offColor;
    }

    public void setOffColor(Color offColor) {
        this.offColor = offColor;
    }

    public void setFontValue(Font fontValue) {
        this.lbValue.setFont(fontValue);
    }

    public void setText(String txt) {
        this.lbValue.setText(txt);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbValue = new javax.swing.JLabel();

        lbValue.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbValue.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbValue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbValueMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbValueMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lbValueMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbValue, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbValue, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public void buttonClick() {
        if (mouseClicked != null) {
            mouseClicked.click(this);
        }
        blink();
    }


    private void lbValueMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbValueMousePressed
        if (evt.getButton() != MouseEvent.BUTTON1) {
            return;
        }
        if (!status) {
            status = true;
            repaint();
        }
    }//GEN-LAST:event_lbValueMousePressed

    private void buttonOff() {
        // TODO add your handling code here:
        if (status) {
            status = false;
            repaint();
        }
    }

    private void lbValueMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbValueMouseReleased
        // TODO add your handling code here:
        if (evt.getButton() != MouseEvent.BUTTON1) {
            return;
        }
        if (mouseClicked != null) {
            mouseClicked.click(this);
        }
        buttonOff();
    }//GEN-LAST:event_lbValueMouseReleased

    private void lbValueMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbValueMouseExited
        // TODO add your handling code here:
        buttonOff();
    }//GEN-LAST:event_lbValueMouseExited
    @Override
    protected void paintBorder(Graphics g) {
        Graphics2D g2 = (Graphics2D) g;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2.setColor(new Color(0, 0, 0));
        g2.drawRoundRect(this.lbValue.getX(), this.lbValue.getY() + 4, this.lbValue.getWidth() - 6, this.lbValue.getHeight() - 6, 18, 20);
        super.paintBorder(g);
    }

    @Override
    public void paint(Graphics g) {
        Graphics2D g2 = (Graphics2D) g;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2.setColor(getBackground());
        g2.fillRoundRect(0, 0, this.getWidth(), this.getHeight(), 20, 20);
        g2.setPaint(new GradientPaint(0, 0, Color.white, 0, this.lbValue.getHeight(), offColor == null ? Color.LIGHT_GRAY : offColor));
        g2.fillRoundRect(this.lbValue.getX(), this.lbValue.getY(), this.lbValue.getWidth(), this.lbValue.getHeight() - 2, 20, 20);
        g2.fillRoundRect(this.lbValue.getX(), this.lbValue.getY() + 4, this.lbValue.getWidth() - 6, this.lbValue.getHeight() - 6, 18, 20);
        super.paint(g);
    }

    @Override
    protected void paintComponent(Graphics g) {
        Graphics2D g2 = (Graphics2D) g;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        if (status) {
            g2.setPaint(new GradientPaint(0, 0, Color.white, 0, this.lbValue.getHeight(), onColor == null ? Color.YELLOW : onColor));
        } else {
            g2.setPaint(new GradientPaint(0, 0, Color.white, 0, this.lbValue.getHeight(), offColor == null ? Color.LIGHT_GRAY : offColor));
        }
        g2.fillRoundRect(this.lbValue.getX(), this.lbValue.getY() + 4, this.lbValue.getWidth() - 6, this.lbValue.getHeight() - 6, 18, 20);
        super.paintComponent(g);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lbValue;
    // End of variables declaration//GEN-END:variables

    public String getValue() {
        return this.lbValue.getText();
    }

    public void hightLight() {
        if (!status) {
            status = true;
            repaint();
        }
    }

    public void removeHightLight() {
        buttonOff();
    }

    public void blink() {
        hightLight();
        Util.delay(86);
        buttonOff();
    }
}
